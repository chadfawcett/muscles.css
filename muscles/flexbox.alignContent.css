/*---
title:      align-content
section:    Flex container
---

`align-content` modifiers are used on a `.flex` element and typically only
makes sense to use in a wrapped container (`.flex--wrap`)

| class               | property                        |
|---------------------|---------------------------------|
| `.flex--ac-start`   | `align-content: flex-start;`    |
| `.flex--ac-end`     | `align-content: flex-end;`      |
| `.flex--ac-center`  | `align-content: center:`        |
| `.flex--ac-between` | `align-content: space-between;` |
| `.flex--ac-around`  | `align-content: space-around;`  |
| `.flex--ac-stretch` | `align-content: stretch;`       |


```example:html
<div class="flex flex--wrap flex--ac-end">
  <div class="u-fb1x">1x</div>
  <div class="u-fb2x">2x</div>
  <div class="u-fb12x">12x</div>
</div>
```

*/

@import "settings.css";

@define-mixin align-content $resp {
  .flex--ac-start$(resp) {
    align-content: flex-start;
  }

  .flex--ac-end$(resp) {
    align-content: flex-end;
  }

  .flex--ac-center$(resp) {
    align-content: center;
  }

  .flex--ac-between$(resp) {
    align-content: space-between;
  }

  .flex--ac-around$(resp) {
    align-content: space-around;
  }

  .flex--ac-stretch$(resp) {
    align-content: stretch;
  }
}

@mixin align-content {}

@media (--sm-viewport) {
  @mixin align-content \@sm {}
}

@media (--md-viewport) {
  @mixin align-content \@md {}
}

@media (--lg-viewport) {
  @mixin align-content \@lg {}
}
