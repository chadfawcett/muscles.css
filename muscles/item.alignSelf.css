/*---
title:    align-self
section:  Flex items
---

`align-self` modifiers allow items to override any 
[`align-items` modifer](#align-items) set on the `.flex` container

| class            | property                  |
| ---              | ---                       |
| `.u-as-start`    | `align-self: flex-start;` |
| `.u-as-end`      | `align-self: flex-end;`   |
| `.u-as-center`   | `align-self: center;`     |
| `.u-as-baseline` | `align-self: baseline;`   |
| `.u-as-stretch`  | `align-self: stretch;`    |


```example:html
<div class="flex">
  <div class="u-fb1x u-as-start huge">start. also content to add height</div>
  <div class="u-fb1x u-as-end">end</div>
  <div class="u-fb1x u-as-center">center</div>
  <div class="u-fb1x u-as-baseline">baseline</div>
  <div class="u-fb1x u-as-stretch">stretch</div>
</div>
```


*/

@import "settings.css";

@define-mixin align-self $resp {
  .u-as-start$(resp) {
    align-self: flex-start;
  }

  .u-as-end$(resp) {
    align-self: flex-end;
  }

  .u-as-center$(resp) {
    align-self: center;
  }

  .u-as-baseline$(resp) {
    align-self: baseline;
  }

  .u-as-stretch$(resp) {
    align-self: stretch;
  }
}

@mixin align-self {

}

@media(--sm-viewport) {
  @mixin align-self \@sm {

  }
}

@media (--md-viewport) {
  @mixin align-self \@md {
  }
}

@media (--lg-viewport) {
  @mixin align-self \@lg {
  }
}
